#include<stdio.h>
#include<stdlib.h>
#include <iostream>
#include <vector>
using namespace std;

class Solution {//坚持循环不变量：左闭右开
public:
    vector<vector<int>> generateMatrix(int n) {

        // 使用vector定义一个二维数组
        vector<vector<int>> nums(n, vector<int>(n, 0));//vector<vector<int>>: 即一个 vector 中的元素本身还是 vector。

        int startX = 0, startY = 0, count = 1, offset = 1;
        int i = 0, j = 0;//数组下标
        while (n / 2)
        {
            for (j = startX; j < n - offset; j++)//上边
                nums[i][j] = count++;
            for (i = startY; i < n - offset; i++)//右边
                nums[i][j] = count++;
            for (; j > startX; j--)//下边
                nums[i][j] = count++;
            for (; i > startY; i--)//左边
                nums[i][j] = count++;
            startX++;//下一圈
            startY++;
            offset++;
            n--;//为更小的一圈进行计算。
        }
        if (n % 2 == 1)
            nums[i][j] = count;
        return nums;
    }
};

int main() {
    Solution solution;
    int n = 3; // 例如生成一个 3x3 的矩阵
    vector<vector<int>> matrix = solution.generateMatrix(n);

    for (auto row : matrix) {
        for (int num : row) {
            cout << num << " ";
        }
        cout << endl;
    }

    return 0;
}
