/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getDepth(TreeNode* node){//确定递归函数的参数和返回值
        if(node == NULL) return 0;//确定终止条件
        //递归过程（后序）
        int leftDepth = getDepth(node->left);
        int rightDepth = getDepth(node->right);
        //锁定叶子节点
        if(node->left == NULL && node->right != NULL)
            return 1 + rightDepth;
        if(node->left != NULL && node->right == NULL)
            return 1 + leftDepth;
        int depth = 1 + min(leftDepth, rightDepth);
        return depth;
    }

    int minDepth(TreeNode* root) {
        return getDepth(root);
    }
};
