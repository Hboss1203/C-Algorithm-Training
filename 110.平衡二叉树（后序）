/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getHight(TreeNode* node){//遍历函数
        if(node == NULL) return 0;//终止条件
        //单层遍历
        int leftHight = getHight(node->left);
        if(leftHight == -1) return -1;
        int rightHight = getHight(node->right);
        if(rightHight == -1) return -1;
        int result;
        if(abs(leftHight - rightHight) > 1) return -1;//非平衡，直接返回-1；
        else result = 1 + max(leftHight, rightHight);
        return result; 
    }

    bool isBalanced(TreeNode* root) {
        return getHight(root) == -1 ? false : true;
    }
};
