class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {//用双0指针解决
        vector<vector<int>> result;//声明二维向量（行是向量，列是整数）
        sort(nums.begin(), nums.end());//将nums从小到大排序
        // 找出a + b + c = 0
        // a = nums[i], b = nums[left], c = nums[right]
        for(int i = 0; i < nums.size(); i++)
        {
            if(nums[i] > 0)
            {
                return result;//排序后的第一个元素大于0，则所有元素都大0.不满足要求a+b+c=0。
            }
            if(i > 0 && nums[i] == nums[i-1])//a去重
            {
                continue;
            }

            int left = i + 1;
            int right = nums.size() - 1;
            while(right > left)//先进行判断，再对b和c去重；
            {
                if(nums[i] + nums[left] + nums[right] > 0)
                    right--;//结果过大，将right（最大值）向小移动
                else if(nums[i] + nums[left] + nums[right] < 0)
                    left++;//结果过小，将left（最小值）向大移动
                else//等于0
                {
                    result.push_back(vector<int>{nums[i], nums[left], nums[right]});
                    while(right > left && nums[left] == nums[left+1]) left++;
                    while(right > left && nums[right] == nums[right-1]) right--;
                    //找到答案时需要同时收缩左右边界
                    right--;
                    left++;
                }
            }
        }
        return result;
    }
};
